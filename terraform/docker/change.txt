Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create
  - destroy

Terraform will perform the following actions:

  # docker_container.app_container will be created
  + resource "docker_container" "app_container" {
      + attach                                      = false
      + bridge                                      = (known after apply)
      + command                                     = (known after apply)
      + container_logs                              = (known after apply)
      + container_read_refresh_timeout_milliseconds = 15000
      + entrypoint                                  = (known after apply)
      + env                                         = (known after apply)
      + exit_code                                   = (known after apply)
      + hostname                                    = (known after apply)
      + id                                          = (known after apply)
      + image                                       = (known after apply)
      + init                                        = (known after apply)
      + ipc_mode                                    = (known after apply)
      + log_driver                                  = (known after apply)
      + logs                                        = false
      + must_run                                    = true
      + name                                        = "my-container"
      + network_data                                = (known after apply)
      + read_only                                   = false
      + remove_volumes                              = true
      + restart                                     = "no"
      + rm                                          = false
      + runtime                                     = (known after apply)
      + security_opts                               = (known after apply)
      + shm_size                                    = (known after apply)
      + start                                       = true
      + stdin_open                                  = false
      + stop_signal                                 = (known after apply)
      + stop_timeout                                = (known after apply)
      + tty                                         = false
      + wait                                        = false
      + wait_timeout                                = 60

      + ports {
          + external = 8000
          + internal = 8000
          + ip       = "0.0.0.0"
          + protocol = "tcp"
        }
    }

  # docker_container.python_app_container will be destroyed
  # (because docker_container.python_app_container is not in configuration)
  - resource "docker_container" "python_app_container" {
      - attach                                      = false -> null
      - command                                     = [] -> null
      - container_read_refresh_timeout_milliseconds = 15000 -> null
      - cpu_shares                                  = 0 -> null
      - dns                                         = [] -> null
      - dns_opts                                    = [] -> null
      - dns_search                                  = [] -> null
      - entrypoint                                  = [
          - "python3",
          - "app.py",
          - "-prod",
        ] -> null
      - env                                         = [] -> null
      - group_add                                   = [] -> null
      - hostname                                    = "c0ab732e4413" -> null
      - id                                          = "c0ab732e44137859c138da9e2a399e60474cff0ac3d3cd8f4497061e518f42b6"
 -> null
      - image                                       = "sha256:8f8f33311f695c64d7aa2454d0b48c0b0682996bfc12d03b964700bba7e559b4" -> null
      - init                                        = false -> null
      - ipc_mode                                    = "private" -> null
      - log_driver                                  = "json-file" -> null
      - log_opts                                    = {} -> null
      - logs                                        = false -> null
      - max_retry_count                             = 0 -> null
      - memory                                      = 0 -> null
      - memory_swap                                 = 0 -> null
      - must_run                                    = true -> null
      - name                                        = "my-container" -> null
      - network_data                                = [
          - {
              - gateway                   = "172.17.0.1"
              - global_ipv6_address       = ""
              - global_ipv6_prefix_length = 0
              - ip_address                = "172.17.0.2"
              - ip_prefix_length          = 16
              - ipv6_gateway              = ""
              - mac_address               = "02:42:ac:11:00:02"
              - network_name              = "bridge"
            },
        ] -> null
      - network_mode                                = "default" -> null
      - privileged                                  = false -> null
      - publish_all_ports                           = false -> null
      - read_only                                   = false -> null
      - remove_volumes                              = true -> null
      - restart                                     = "no" -> null
      - rm                                          = false -> null
      - runtime                                     = "runc" -> null
      - security_opts                               = [] -> null
      - shm_size                                    = 64 -> null
      - start                                       = true -> null
      - stdin_open                                  = false -> null
      - stop_timeout                                = 0 -> null
      - storage_opts                                = {} -> null
      - sysctls                                     = {} -> null
      - tmpfs                                       = {} -> null
      - tty                                         = false -> null
      - user                                        = "limiteduser" -> null
      - wait                                        = false -> null
      - wait_timeout                                = 60 -> null
      - working_dir                                 = "/app" -> null

      - ports {
          - external = 8080 -> null
          - internal = 8000 -> null
          - ip       = "0.0.0.0" -> null
          - protocol = "tcp" -> null
        }
    }

  # docker_image.app_image will be created
  + resource "docker_image" "app_image" {
      + id           = (known after apply)
      + image_id     = (known after apply)
      + keep_locally = false
      + name         = "nabiull2020/moscow-time-flask-app:latest"
      + repo_digest  = (known after apply)
    }

  # docker_image.python_app_image will be destroyed
  # (because docker_image.python_app_image is not in configuration)
  - resource "docker_image" "python_app_image" {
      - id           = "sha256:8f8f33311f695c64d7aa2454d0b48c0b0682996bfc12d03b964700bba7e559b4nabiull2020/moscow-time-flask-app:latest" -> null
      - image_id     = "sha256:8f8f33311f695c64d7aa2454d0b48c0b0682996bfc12d03b964700bba7e559b4" -> null
      - keep_locally = false -> null
      - name         = "nabiull2020/moscow-time-flask-app:latest" -> null
      - repo_digest  = "nabiull2020/moscow-time-flask-app@sha256:6b34ef1f548ed31952fd98d5c19dff74a727ecb3b15cd24c6281742222b04c5c" -> null
    }

Plan: 2 to add, 0 to change, 2 to destroy.

Changes to Outputs:
  ~ container_id = "c0ab732e44137859c138da9e2a399e60474cff0ac3d3cd8f4497061e518f42b6" -> (known after apply)
  ~ image_id     = "sha256:8f8f33311f695c64d7aa2454d0b48c0b0682996bfc12d03b964700bba7e559b4nabiull2020/moscow-time-flask-app:latest" -> (known after apply)