name: PYTHON_APP_CI

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app_python

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Python Setup
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Dependencies install
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Linter
        run: |
          pylint app.py --fail-under=8 --disable=missing-module-docstring --disable=missing-class-docstring --disable=missing-function-docstring
          pylint ./tests --fail-under=8 --disable=missing-module-docstring --disable=missing-class-docstring --disable=missing-function-docstring

      - name: Tests
        run: |
          python -m unittest discover -s tests -p '*_tests.py'

  docker:
    needs: build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./app_python

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/moscow-time-flask-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/moscow-time-flask-app:latest